name: Build docker image

on:
  workflow_call:
    inputs:
      PROJECT_MODULE:
        default: ""
        type: string
      PROJECT_APP:
        default: ""
        type: string
      BUILD_ARGS:
        default: ""
        type: string
      DOCKER_CONTEXT:
        default: "."
        type: string
      DOCKER_NAME:
        required: true
        type: string
    secrets:
      MLS_PACKAGES_TOKEN:
        required: false
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  docker-build:
    name: Build Docker image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: "${{ inputs.DOCKER_NAME }}"
          # Always set the 'latest' tag (for now)
          # TODO Remove when first production release is available
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create settings file
        run: |
          cat << EOF > /tmp/m2-settings.xml
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
              <servers>
                  <server>
                      <id>github</id>
                      <username>${GITHUB_ACTOR}</username>
                      <password>${GITHUB_TOKEN}</password>
                  </server>
              </servers>
          </settings>
          EOF
        env:
          GITHUB_TOKEN: "${{ secrets.MLS_PACKAGES_TOKEN }}"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.DOCKER_CONTEXT }}
          build-args: |
            MODULE=${{ inputs.PROJECT_MODULE }}
            APP=${{ inputs.PROJECT_APP }}
            ${{ inputs.BUILD_ARGS }}
          secret-files: |
            m2-settings=/tmp/m2-settings.xml
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
